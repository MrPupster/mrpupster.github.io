/*!
 * Albe-Timeline v4.0.0, https://github.com/Albejr/jquery-albe-timeline
 * ======================================================================
 * Plugin para renderização de 'linha do tempo' a partir de listas de dados em JSON
 *
 * 2017, Albertino Júnior, http://albertino.eti.br
 */

(function ($) {
	
	$.fn.makeNavbar = function(){
		
		var $this = this;
		
// 		$this.find('ul').css('list-style','none');
		
// 		$this.find('ul li').css({
// // 			'float'		:	'left',
// // 			'margin'	:	'0px 10px'
// 		});
		
// 		$this.find('ul li a').css({
// 			'text-decoration'	:	'none',
// // 			'padding'			:	'3px 5px',
// // 			'color' : 'pink'
// 		});
		
		$this.append('<div style="clear:both;"></div>')
		
		return $this;
		
	}
	
	$.fn.hoverline = function(options){
					
	    var settings = $.extend({
		  'color'       		:		'#333',
		  'height'				:		'2px',
		  'start'				:		'1',
		  'speed'				:		'200',
		  'border'				:		'none',
		  'borderwidthside'		:		'1px',
		  'borderwidthtop'		:		'1px',
		  'borderstyle'			:		'solid'
		}, options);
		
		var $hoverline = $('<span>');
		
		$hoverline.attr('class','hoverline');
		$hoverline.css({
			'background'	:	settings.color,
			'height'		:	settings.height,
			'border-color'	:	settings.border,
			'border-style'	:	settings.borderstyle,
			'border-width'	:	settings.borderwidthtop + ' ' + settings.borderwidthside,
			'width'			:	'1px',
			'position'		:	'relative',
			'left'			:	'1px',
			'bottom' : '23px',
		  	'zIndex' : 5
		});
		
		if(settings.border == "none")
			$hoverline.css('border','0');
		
		this.each(function(){
			
			$this = $(this);

			function moveHover(){
				if (!$(this).find('ul li a.clicked').hasClass('clicked')) {
					
					
					$link = $(this);
					$(this).parent().find('.hoverline').stop().animate({
						'left'	:	$link.parent().position().left,
						'width'	:	$link.parent().width()
					}, speed);
	// 				$(this).parent().parent().parent().find('.hoverline').css({'background' : 'pink'});
					console.log($link.parent().position().left + ' | ' + $link.parent().width());
				}
				
			}
			
			function clickedItem(){
				$(this).parent().parent().parent().find('ul li a.currElement').removeClass('currElement');
				$(this).addClass('currElement');
				$(this).addClass('clicked');
// 				$(this).css({'color' : 'red'});
			}
			
			function leaveHover(){
				if (!$(this).parent().parent().parent().find('ul li a.clicked').hasClass('clicked')) {
					
					
					$link = $(this).find('ul li a.currElement');
					$(this).find('.hoverline').stop().animate({
						'left'	:	$link.parent().position().left,
						'width'	:	$link.parent().width()
					}, speed);
		// 				$(this).find('.hoverline').css({'background' : 'orange'});
					console.log($link.parent().position().left + ' | ' + $link.parent().width());
				}
				
			}
		
			$this.css({
			'position' : 'sticky',
			'float' : 'right',
			'top' : 0,
		  	'zIndex' : 5,
			'height' : '50px',
    			'margin-bottom' : 0});
			
			$this.append('<div style="clear:both;"></div>');
			
			$this.append($hoverline.clone());
			
			$hoverline = $this.find('.hoverline');
					
			var speed = parseInt(settings.speed);
					
			$this.find('ul li a').bind('click',clickedItem);
			
			$this.find('ul li a').bind('mouseenter',moveHover);
			
			$this.bind('mouseleave',leaveHover);
			
			$this.find('ul li a').eq(settings.start-1).addClass('currElement');
			
			$this.trigger('mouseleave');
		
		});
		
		return this;

	};
	
    $.fn.albeTimeline = function (json, options) {
        function come(elem) {
          var docViewTop = $('#list0').scrollTop(),
            docViewBottom = docViewTop + $('#list0').height(),
            elemTop = $(elem).offset().top,
            elemBottom = elemTop + $(elem).height();

          return ((elemBottom <= docViewBottom) && (elemTop >= docViewTop));
        }
        
         var block_show = null;
	    var xxx = {};
	    var temp;

function scrollTracking(y)  {
    var wt = $('#modalBody').scrollTop();
    var wh = $('.scroll-test').height();
//     var et = $('.yyy' + y).offset().top;
// 	var eb = $('.yyy' + y).offset().bottom;
//     var ehh = $('.yyy' + y).outerHeight();
// 	var eh = $('.yyy' + y).height();

// //     if (wt + wh >= et && wt + wh - ehh * 2 <= et + (wh - ehh)){
// 	if (et < 450 && et > -1 * (eh - 270)){
//         if (block_show == null || block_show == false) {
//             console.log('Блок yyy' + y + ' в области видимости');
// 		console.log('wt | wh | et | eh | eb: ' + wt + ' | ' + wh + ' | ' + et + ' | ' + eh + ' | ' + eb);
//         }
//         block_show = true;
//     } else {
//         if (block_show == null || block_show == true) {
//             console.log('Блок yyy' + y + ' скрыт');
// 		console.log('wt | wh | et | eh | eb: ' + wt + ' | ' + wh + ' | ' + et + ' | ' + eh + ' | ' + eb);
//         }
//         block_show = false;
//     }
	
	$.each(y, function (key, value) {
		
	    	var et = $('.yyy' + key).offset().top;
		var eh = $('.yyy' + key).height();
		
		
		//     if (wt + wh >= et && wt + wh - ehh * 2 <= et + (wh - ehh)){
// 		if (et < 450 && et > -1 * (eh - 200)){
		if (et <= 105 && et + eh >= 100){
			if (xxx[key] == null || xxx[key] == false) {
// 				$( "#timeline-menu").click(function() {
// 				  console.log('Click');
// 					return false;
// 				});
				var preventAnimation = false;
				$('a.scrollto').on('click', function(e){
					    console.log('Click');
// 			                $link = $(this).find('ul li a.currElement');
// 				$(this).find('.hoverline').stop().animate({
// 					'left'	:	$link.position().left,
// 					'width'	:	$link.parent().width()
// 				}, 200);
					 preventAnimation = true;
					
				    });
// 				console.log('Force clicked: ' +  $('#tlm' + key).parent().parent().parent().find('ul li a.clicked').hasClass('clicked'));
				if ($('#tlm' + key).parent().parent().parent().find('ul li a.clicked').hasClass('clicked')) {
					
					
					console.log('Return');
					if ($('#tlm' + key).hasClass('clicked')) {
						$('#tlm' + key).parent().parent().parent().find('ul li a.clicked').removeClass('clicked');
					} 
					return;
					
				}
				temp = et;
				$('#tlm' + key).css("color", "#b691fa");
// 				$('#tlm' + key).css("color", "#fffafa");
				$('#tlm' + key).parent().parent().parent().find('ul li a.currElement').removeClass('currElement');
				$('#tlm' + key).addClass('currElement');
				$link = $('#tlm' + key);
				
				$('#tlm' + key).parent().parent().parent().find('.hoverline').stop().animate({
					'left'	:	$link.parent().position().left,
					'width'	:	$link.parent().width()
				}, 200);
// 				$('#tlm' + key).parent().parent().parent().find('.hoverline').css("display", "inherit");
				console.log('Left: ' + $('#tlm' + key).parent().position().left + ' | ' + $link.parent().width());
			    console.log('Блок yyy' + key + ' в области видимости');
				console.log('wtm | wh | et | eh | bsh: ' + wt + ' | ' + wh + ' | ' + et + ' | ' + eh + ' | ' + xxx[key]);
			}
			xxx[key] = true;
		    } else {
			if (xxx[key] == null || xxx[key] == true) {
				$('#tlm' + key).css("color", "");
// 				$link = $('#tlm' + key);
				if ((key == Object.keys(xxx)[Object.keys(xxx).length-1]) && et > 70) {
					$('#tlm' + key).parent().parent().parent().find('.hoverline').stop().animate({
					'left'	:	0,
					'width'	:	0
					}, 200);
				} //else if (et < temp) {
// 					$('#tlm' + key).parent().parent().parent().find('.hoverline').stop().animate({
// 					'left'	:	$link.parent().position().left + $link.parent().width() * 0.5,
// 					'width'	:	$link.parent().width()
// // 					'left'	:	$link.parent().position().left + $link.parent().width(),
// // 					'width'	:	0
// 					}, 200);
// 				} else if (et > temp) {
// 					$('#tlm' + key).parent().parent().parent().find('.hoverline').stop().animate({
// 					'left'	:	$link.parent().position().left - $link.parent().width() * 0.5,
// 					'width'	:	$link.parent().width()
// // 					'left'	:	$link.parent().position().left,
// // 					'width'	:	0
// 					}, 200);
// 				}
				
// 				$('#tlm' + key).parent().parent().parent().find('.hoverline').css("display", "none");
				console.log('!!!!!!!!!!' +  Object.keys(xxx)[Object.keys(xxx).length-1]);
			    console.log('Блок yyy' + key + ' скрыт');
				console.log('wtm | wh | et | eh | bsh: ' + wt + ' | ' + wh + ' | ' + et + ' | ' + eh + ' | ' + xxx[key]);
			}
			xxx[key] = false;
		    }
    	})
}
        
        var _this = this;
        _this.html('');
        var settings = $.extend({}, $.fn.albeTimeline.defaults, options);
        var idioma = ($.fn.albeTimeline.languages.hasOwnProperty(settings.language)) ? $.fn.albeTimeline.languages[settings.language] : {
            days: ['Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', 'Воскресенье'],
            months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
            shortMonths: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
            separator: 'de',
            msgEmptyContent: 'Sem informações a serem exibidas.',
        };
        if (typeof (json) == 'string') {
            json = $.parseJSON(json)
        }
        if ($.isEmptyObject(json)) {
            console.warn(idioma.msgEmptyContent);
            return
        }
        json = json.sort(function (a, b) {
            return (settings.sortDesc) ? (Date.parse(b['time']) - Date.parse(a['time'])) : (Date.parse(a['time']) - Date.parse(b['time']))
        });
    
        var eMenuD = $('<nav>').addClass('navbar');
	  var  eMenu = $('<ul>').attr('id', 'timeline-menu');
        var eTimeline = $('<section>').attr('id', 'timeline').addClass('scroll-test1');
        $('#list0').data('y', 1);
//         $('#list0').data('y', {2017: 2});
        var qqq = {};
    	
        $.each(json, function (index, element) {
            var ano = new Date(element.time).getFullYear();
            var agrupador = $(eTimeline).find('div.group' + ano);
            var divArt = $(eTimeline).find('div.articles' + ano);
            var irma = agrupador.length;
            
//             if (agrupador.length === 0) {
//                 agrupador = $('<div data-toggle="tooltip" title="Гугл док">').attr('id', ('y' + ano)).addClass('group' + ano).text(ano);
//                 $(eTimeline).append(agrupador);
//                 var anchor = $('<a>').attr('href', ('#y' + ano)).text(ano).attr('title', irma);
//                 eMenu.append($('<li>').append(anchor))
//             }
            
             if (agrupador.length === 0) {
                xxx[ano] = null;
	        qqq[ano] = 0;
                agrupador = $('<div>').attr('id', ('y' + ano)).addClass('group' + ano).text(ano).attr('name', ('y' + ano)).attr('data-toggle', 'tooltip').attr('data-placement', 'right');
             	divArt = $('<div>').addClass('articles' + ano);
	     	var yyy = $('<div>').addClass('yyy' + ano).append(agrupador).append(divArt);
                $(eTimeline).append(yyy);
//                 var anchor = $('<a>').attr('href', ('#y' + ano)).text(ano).attr('title', $('#list0').data('y'));
                var anchor = $('<a>').attr('href', ('#y' + ano)).text(ano).addClass('scrollto').attr('name', ('y' + ano)).attr('id', ('tlm' + ano)).attr('data-toggle', 'tooltip').attr('data-placement', 'bottom');
                eMenu.append($('<li>').append(anchor))
            }
                       
            
            var badge = $('<a>').addClass('badge');
            badge.text(fnDateFormat(element.time, settings.formatDate, idioma));
            var ePanel = $('<div>').addClass('panel').append(badge);
            if (element.header) {
                var ePanelHead = $('<div>').addClass('panel-heading');
                var ePaneltitle = $('<h4>').addClass('panel-title').text(element.header);
                ePanelHead.append(ePaneltitle);
                ePanel.append(ePanelHead)
            }
            var ePanelBody = $('<div>').addClass('panel-body');
            $.each(element.body, function (index2, value2) {
                var e = $('<' + value2.tag + '>');
                $(value2.attr).each(function () {
                    $.each(this, function (index3, value3) {
                        (index3.toLowerCase() === 'cssclass') ? e.addClass(value3): e.attr(index3, value3)
                    })
                });
                if (value2.content) e.html(value2.content);
                ePanelBody.append(e)
            });
            ePanel.append(ePanelBody);
            if (element.footer) {
                var ePanelFooter = $('<div>').addClass('panel-footer').html(element.footer);
                ePanel.append(ePanelFooter)
            }
		qqq[ano]++;
//             var irmaos = divArt.siblings('article[id^="a' + ano + '"]');
            var slot = $('<article id="a' + ano + '-' + qqq[ano] + '">').append(ePanel);
//             if (irmaos.length > 0) slot.insertAfter(irmaos.last()).appendTo(divArt);
//             else slot.insertAfter(agrupador).appendTo(divArt)
		slot.appendTo(divArt)
                     
            
        });
        
//         $('#list0').data('y', {2018: 3});
//         $('#list0').data('y', {2019: 4});
        $('#list0').data('y', 2);

        

        var badge = $('<div>').addClass('badge').html('&nbsp;');
        var ePanel = $('<div>').addClass('panel').append(badge);
        eTimeline.append($('<article>').append(ePanel));
        eTimeline.append($('<div>').addClass('clearfix').css({
            'float': 'none'
        }));;
        $.each(eTimeline.find('article'), function (index, value) {
            $(this).addClass((index % 2 == 0) ? '' : 'inverted');
	    $.each(eTimeline.find('div[class*="articles"]'), function (index, value) {
		    if (settings.effect && settings.effect != 'none') $(this).addClass('animatedd test animatedTest').css('animation-delay', '0.3s')
	    });
//             if (settings.effect && settings.effect != 'none') $(this).addClass('animated ' + settings.effect).css('animation-delay', '0.3s')
        });
        if (settings.showGroup) {
		$.each(eTimeline.find('div[class*="group"]'), function (index, value) {
		 	if (settings.effect && settings.effect != 'none') $(this).addClass('animated fadeInLeft').css('animation-duration', '0.7s')			
            	})
            if (settings.showMenu) {
		    eMenuD.append(eMenu);
		    if (settings.effect && settings.effect != 'none') eMenuD.addClass('animated fadeInRight').css('animation-delay', '0.5s')
                eMenuD.appendTo(_this)
            }
        } else {
            $.each(eTimeline.find('div[class*="group"]'), function (index, value) {
                $(this).css('display', 'none')
            })
        }
        eTimeline.appendTo(_this)
        
       
        
        $.each(qqq, function (key, value) {
                $('[name="y' + key + '"]').attr('data-original-title', 'Всего стримов в ' + key + '-м году: ' + value);
//             if (come('#y' + key)) { console.log(key); }
  
            })

       $('[data-toggle="tooltip"]').tooltip({
           animation: true,
           container: 'body',
        trigger: 'hover'   
        });
        
     $(document).ready(function(){
            $('a.scrollto').on('click', function(e){
// 		    console.log('Click');
                e.preventDefault();
//                 $('#modalBody').stop().animate({ scrollTop: $(this.hash).offset().top }, 500);
                $('.scroll-test').scrollTo($(this.hash), 500, {offset: {top:6}});
            });
        });
        
	 $('#list0').scroll(function(){
	    scrollTracking(qqq);
	}); 
	    
	    
	$(document).ready(function(){
		$('.navbar').makeNavbar();
		$('.navbar').hoverline({
			  'color'       		:		'#6441a5',
			  'height'				:		'5px',
			  'start'				:		'1',
			  'speed'				:		'200',
			  'border'				:		'none',
			  'borderwidthside'		:		'1px',
			  'borderwidthtop'		:		'1px',
			  'borderstyle'			:		'solid'
		});
	
	});

	var modalOpened = false;
	
// 	$("#historyModal").one('shown.bs.modal', function(){
// // 		if (!modalOpened) {
// // 			modalOpened = true;
// 			setTimeout(
// 			  function() 
// 			  {
			    	
				 
// 				  if (settings.effect && settings.effect != 'none') {
// 					$.each(eTimeline.find('div[class*="group"]'), function (index, value) {
// 		// 			    $(this).addClass((index % 2 == 0) ? '' : 'inverted');
// 					    if (settings.effect && settings.effect != 'none') $(this).removeClass('animated fadeInLeft')
// 					});
// 					   $.each(eTimeline.find('div[class*="articles"]'), function (index, value) {
// 						    if (settings.effect && settings.effect != 'none') $(this).removeClass('animated ' + settings.effect)
// 					    });
// 					  eMenuD.removeClass('animated fadeInRight');
// 				  }
// 				console.log('Mod1: ' + modalOpened);
// 			  }, 1000);
			
// // 		} else $(this).removeClass('animated fadeInRight')		
// 	});


        
//         $(".scroll-test").on('click', 'a.scrollto', function(e){
//             e.preventDefault();
//             $.scrollTo($(this.hash), 500);
//         });
        
//         $(function(){
//         $('a.scrollto').click(function() {
//         if (location.pathname.replace(/^\//,'') == this.pathname.replace(/^\//,'')
//         && location.hostname == this.hostname) {
//         var $target = $(this.hash);
//         $target = $target.length && $target || $('[name=' + this.hash.slice(1) +']');
//         if ($target.length) {
//         var targetOffset = $target.offset().top;
//         $('.scroll-test1').animate({scrollTop: targetOffset}, 500);//скорость прокрутки
//         return false;
//         }
//         }
//         });
//         });
        
        
        
       
    };
    
    
    $.fn.albeTimeline.languages = {};
    $.fn.albeTimeline.defaults = {
        effect: 'fadeInUp',
        formatDate: 'dd MMM',
        language: 'pt-BR',
        showGroup: true,
        showMenu: true,
        sortDesc: true,
    };
    var fnDateFormat = function (value, format, language) {
        var parts = value.split(/[ :\-\/]/g);
        var newDate = new Date(parts[0], (parts[1] - 1), parts[2], (parts[3] || 0), (parts[4] || 0), (parts[5] || 0));
        if (language.separator) {
            format = format.replace(new RegExp(language.separator, 'g'), '___')
        }
        format = format.replace('ss', padLeft(newDate.getSeconds(), 2));
        format = format.replace('s', newDate.getSeconds());
        format = format.replace('dd', padLeft(newDate.getDate(), 2));
        format = format.replace('d', newDate.getDate());
        format = format.replace('mm', padLeft(newDate.getMinutes(), 2));
        format = format.replace('m', newDate.getMinutes());
        format = format.replace('MMMM', language.months[newDate.getMonth()]);
        format = format.replace('MMM', language.months[newDate.getMonth()].substring(0, 3));
        format = format.replace('MM', padLeft((newDate.getMonth() + 1), 2));
        format = format.replace('DD', language.days[newDate.getDay()]);
        format = format.replace('yyyy', newDate.getFullYear());
        format = format.replace('YYYY', newDate.getFullYear());
        format = format.replace('yy', (newDate.getFullYear() + '').substring(2));
        format = format.replace('YY', (newDate.getFullYear() + '').substring(2));
        format = format.replace('HH', padLeft(newDate.getHours(), 2));
        format = format.replace('H', newDate.getHours());
        if (language.separator) {
            format = format.replace(new RegExp('___', 'g'), language.separator)
        }
        return format
    };
    var padLeft = function (n, width, z) {
        z = z || '0';
        n = n + '';
        return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n
    }
    
})(jQuery);

